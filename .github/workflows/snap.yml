name: "Create snapshot of points"
on:
  schedule:
    # - cron: "0,30 * * * *" # every 0th and 30th minute of an hour
    - cron: "*/5 * * * *" # every 5 minutes
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  solana_version: 1.18.18

jobs:
  points-snap:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        # with:
        # lfs: true
        # fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: install global mocha
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          npm install -g mocha
          npm install -g ts-mocha
          npm install -g typescript
          npm install -g @project-serum/anchor
          ts-mocha -h
      - name: install essential
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
      - name: install solana
        run: |
          sh -c "$(curl -sSfL https://release.anza.xyz/v${{ env.solana_version }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
      - name: setup solana
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          solana-keygen new -o "$HOME/.config/solana/id.json" --no-passphrase --silent
      - name: snapshot
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          export ANCHOR_WALLET="/home/runner/.config/solana/id.json"
          npm install
          npm run snap
      - uses: actions/upload-artifact@v4
        with:
          name: eclipse-points-snapshot-${{ github.run_id }}
          path: |
            ./data/*.json

  deploy:
    needs: [points-snap]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v2
        # with:
        #   lfs: true
        #   fetch-depth: 0
      # - name: Configure Git LFS
      #   run: |
      #     git lfs install
      #     git lfs pull
      #     git lfs prune
      - name: Download snapshot
        uses: actions/download-artifact@v4
        with:
          name: eclipse-points-snapshot-${{ github.run_id }}
          path: ./data/
        continue-on-error: true
      - name: Commit changes
        run: |
          git config --global user.email stats@invariant.app
          git config --global user.name invariantStats
          git add ./data/
          git commit -m "Snapshot of points done!"
      - name: Disable Git LFS
        run: git config --global filter.lfs.skip true

      - name: GitHub Push
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          force: true
      - name: Re-enable Git LFS
        if: always() # This ensures it runs even if previous steps fail
        run: git config --global filter.lfs.skip false
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Deploy to Production
        uses: amondnet/vercel-action@v20
        id: deploy-vercel-production
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
          scope: ${{ secrets.VERCEL_ORG_ID }}
